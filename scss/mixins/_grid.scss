@use 'sass:map';

$grid-breakpoints: (
  sm: 'mobile',
  md: 'tablet',
  lg: 'desktop',
  xl: 'widescreen'
);
$grid-percentages: (
  0: 0%,
  10: 10%,
  20: 20%,
  25: 25%,
  30: 30%,
  33: 33.3333%,
  40: 40%,
  50: 50%,
  60: 60%,
  66: 66.6666%,
  70: 70%,
  75: 75%,
  80: 80%,
  90: 90%,
  100: 100%
);

/**
 Injects the grid rules for a specific medium. Loops through each grid column
 size and writes rules for their size and respective offset.

 @private
 @param $medium The medium suffix to append to the rule.
 @example Inject rules for below tablets.

   ```
   @include grid-inject("-tablet");
   ```

 @output A list of rules for each percentage.

   ```
   &.-x0-tablet
   &.-offset-0-tablet
   ...
   &-x100-tablet
   &-offset-100-tablet
   ```
 */
@mixin grid-inject($medium) {
  @each $percentage, $value in $grid-percentages {
    &.-offset-#{$percentage}#{$medium} {
      margin-left: $value;
    }

    &.-x#{$percentage}#{$medium} {
      flex: 0 0 $value;
      max-width: $value;
    }
  }
}

/**
 Builds the grid rules for a specific breakpoint.

 If the breakpoint is not null, a proper suffix is created and the rules applied
 with it. If it is null, then no suffix is added. This is helpful to define
 default values with no special regard to different viewports.

 @example Create default grid. For a 20% column size, it generates `-x20`
 and `-offset-20` rules.

   ```
   @include grid-at-breakpoint();
   ```

 @example Create grid for tablet breakpoint. For a 20% column size, it generates
 `-x20-tablet` and `-offset-20-tablet` rules.

   ```
   @include grid-at-breakpoint();
   ```
 */

@mixin grid-at-breakpoint($breakpoint: null) {
  $medium: '';
  $name: map.get($grid-breakpoints, $breakpoint);

  @if $name {
    $medium: -#{$name};

    @include breakpoint($breakpoint) {
      @include grid-inject($medium);
    }
  } @else {
    @include grid-inject($medium);
  }
}
